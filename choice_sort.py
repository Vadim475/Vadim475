def choice_sort(sequence):
    # Визначаємо функцію для знаходження індексу максимального елемента
    def get_max_index():
        # Початково вважаємо, що максимальний елемент знаходиться на позиції 0
        max_index = 0
        # Проходимо по всіх елементах до правої межі (включно)
        for index in range(right_bound + 1):
            # Якщо знайдений елемент більший за поточний максимальний, оновлюємо max_index
            if sequence[max_index] < sequence[index]:
                max_index = index
        # Повертаємо індекс максимального елемента
        return max_index

    # Встановлюємо початкову праву межу на останній елемент списку
    right_bound = len(sequence) - 1
    # Поки права межа більше 1, продовжуємо сортування
    while right_bound > 1:
        # Знаходимо індекс максимального елемента в невідсортованій частині списку
        max_index = get_max_index()
        # Міняємо місцями максимальний елемент з елементом на правій межі
        sequence[right_bound], sequence[max_index] = sequence[max_index], sequence[right_bound]
        # Зменшуємо праву межу на 1
        right_bound -= 1
        # Друкуємо поточний стан списку після кожного обміну
        print(sequence)
    # Повертаємо відсортовану послідовність
    return sequence

if __name__ == "__main__":
    # Задаємо список, який потрібно відсортувати
    to_sort = [15, 9, 8, 1, 4, 11, 7, 12, 13, 6, 5, 3, 16, 2, 10, 14]
    # Викликаємо функцію сортування і друкуємо відсортований список
    print(choice_sort(to_sort))
